{
  "name": "dashboard",
  "version": "0.1.0",
  "private": true,
  "devDependencies": {
    "babel-polyfill": "^6.26.0",
    "prettier": "^1.13.5",
    "react-scripts": "1.1.4",
    "source-map-explorer": "^1.5.0",
    "webpack-bundle-analyzer": "^2.13.1"
  },
  "dependencies": {
    "@material-ui/codemod": "^1.1.0",
    "@material-ui/core": "^1.2.1",
    "@material-ui/icons": "^1.1.0",
    "apollo-boost": "^0.1.9",
    "apollo-cache-inmemory": "^1.2.4",
    "apollo-client": "^2.3.4",
    "apollo-client-preset": "^1.0.8",
    "apollo-link-http": "^1.5.4",
    "apollo-link-state": "^0.3.1",
    "apollo-upload-client": "^8.0.0",
    "axios": "^0.17.0",
    "create-react-app": "^1.5.2",
    "date-fns": "^1.28.5",
    "dotenv": "^4.0.0",
    "global": "^4.3.1",
    "graphql": "^0.11.7",
    "graphql-tag": "^2.9.2",
    "highcharts": "^6.1.0",
    "jsonwebtoken": "^8.3.0",
    "lodash": "^4.17.10",
    "material-ui": "^0.19.4",
    "prop-types": "^15.6.1",
    "ramda": "^0.25.0",
    "react": "^16.4.1",
    "react-adopt": "^0.6.0",
    "react-apollo": "^2.1.5",
    "react-dom": "^16.4.1",
    "react-highcharts": "^13.0.0",
    "react-redux": "^5.0.7",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.3.1",
    "react-tap-event-plugin": "^3.0.3",
    "redux": "3.6.0",
    "redux-form": "^7.4.1",
    "redux-form-material-ui": "^4.3.4",
    "redux-promise": "^0.5.3",
    "redux-thunk": "^2.3.0",
    "styled-components": "^2.4.1"
  },
  "scripts": {
    "start": "react-scripts start",
    "analyze": "source-map-explorer build/static/js/main.*",
    "build": "react-scripts build",
    "build:dev": "SET REACT_APP_HTTP=https && SET REACT_APP_PORT_GRAPHQL=4001 && SET REACT_APP_PORT1_REST=3002 && react-scripts build",
    "copy": "xcopy /s /Y build \\\\nlbavwixs\\dashboard.beta",
    "copy:live": "xcopy /s /Y build \\\\nlbavwixs\\dashboard",
    "copy:dev": "xcopy /s /Y build \\\\nlbavwixs\\dashboard.dev",
    "beta": "npm run build && npm run copy",
    "deploy:dev": "npm run build:dev && npm run copy:dev",
    "deploy:live": "npm run build && npm run copy:live",
    "test": "react-scripts test --env=jsdom",
    "eject": "react-scripts eject",
    "lint": "eslint src/**/*.js server.js",
    "testenv": "SET NODE_ENV=test",
    "prodenv": "SET NODE_ENV=production"
  }
}
